"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settingps and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'g&lsb1#xi-=&xkx_ivfm-%dk3yu-s%zalve)tj6p-lzj_tqfd)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['unitedmart.herokuapp.com','127.0.0.1',]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # crispy forms
    'crispy_forms',

    # for custom user model
    'users',

    # Base app containing mix of important base things
    'Base',

    # app for seller
    'Seller',

    # app for malls , market , shops and exploration stuff
    'Explore',

    # Search functionality
    'django_elasticsearch_dsl',

    # AWS storage
    'storages',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # For managing static files in production
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'Templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Custom user model
AUTH_USER_MODEL = 'users.Account'

WSGI_APPLICATION = 'core.wsgi.application'


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'd5dp48c7ff68q9',
        'HOST': 'ec2-3-237-55-96.compute-1.amazonaws.com',
        'PORT': 5432,
        'USER': 'qskdtbckhhyboo',
        'PASSWORD': '6ef9e05443103bea5a93f2c3c6cb111b7f721ea3055a08b7be1bb6ab00a0ad15',
    }
}
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         "NAME": os.path.join(BASE_DIR, 'db.sqlite3')
#
#
#     }
# }
#            USER      :password                                                         HOST                                    PORT/NAME
#postgres://gveojcfdwivzyt:8deb2dc01fa1692f03ab8bc6456ef15a6834a6747b55c32b4bdd5d59581ea8e2@ec2-3-95-124-37.compute-1.amazonaws.com:5432/d9on728fs45501

#            USER      :password                                                         HOST                                    PORT/NAME
#postgres://gveojcfdwivzyt:8deb2dc01fa1692f03ab8bc6456ef15a6834a6747b55c32b4bdd5d59581ea8e2@ec2-3-95-124-37.compute-1.amazonaws.com:5432/d9on728fs45501

# search engine
ELASTICSEARCH_DSL ={
    'default':{
                          #name : # password             @ #Endpoint
        'hosts':'https://elastic:y5iBC2wbLJNY1eAaalwpfdhR@elastic-932e66.es.us-central1.gcp.cloud.es.io:9243/',
        'timeout': 60,

        #'hosts':'localhost',
    }

}

#  To re upload elasticsearch create new mail and test for elastic.co
# Then database snap is stored inside the app
# after setting up postgres on heroku set
# heroku pg:backups:restore "https://assets07.s3.us-east-2.amazonaws.com/latest.dump" DATABASE


# For auto updation of the search indexes
ELASTICSEARCH_DSL_SIGNAL_PROCESSOR = 'django_elasticsearch_dsl.signals.RealTimeSignalProcessor'

# HAYSTACK_CONNECTIONS = {
#     'default': {
#         'ENGINE': 'haystack.backends.elasticsearch_backend.ElasticsearchSearchEngine',
#         'URL': 'https://elastic:lcQLDOmGNfnQ8f30MqQeHC33@472e7b40864444229a411b745169bb9e.us-east-1.aws.found.io:9243/',
#         'INDEX_NAME': 'haystack',
#     },
# }


# Settings for email
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
MAILER_EMAIL_BACKEND = EMAIL_BACKEND
# Host for sending e-mail.
EMAIL_HOST = 'smtp.gmail.com'

# Port for sending e-mail.
EMAIL_PORT = 465

# Optional SMTP authentication information for EMAIL_HOST.
EMAIL_HOST_USER = 'singhrohanss007@gmail.com'
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
EMAIL_HOST_PASSWORD = 'Imhulk@07'
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

DEFAULT_AUTO_FIELD='django.db.models.AutoField'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS=[ os.path.join(BASE_DIR,'static_files')]
STATIC_ROOT=os.path.join(BASE_DIR,'assets')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# django-crispy-forms
CRISPY_TEMPLATE_PACK ='bootstrap4'

# # where to when customer login
#LOGIN_REDIRECT_URL = '/'

# AWS settings
AWS_ACCESS_KEY_ID = 'AKIAQVZDNG5NCVIFDPX4'
AWS_SECRET_ACCESS_KEY = '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'
AWS_STORAGE_BUCKET_NAME = 'assets07'
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',
}

AWS_S3_SECURE_URLS = False
DEFAULT_FILE_STORAGE = 'core.storage_backends.MediaStorage'
